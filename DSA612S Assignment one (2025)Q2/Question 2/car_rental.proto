syntax = "proto3";

package carrental;

option go_package = "carrentalpb";

// User roles
enum Role {
  CUSTOMER = 0;
  ADMIN = 1;
}

// Car status values
enum CarStatus {
  AVAILABLE = 0;
  UNAVAILABLE = 1;
  RENTED = 2;
}

message Car {
  string plate = 1;          // license plate (unique ID)
  string make = 2;
  string model = 3;
  int32 year = 4;
  double daily_price = 5;
  int32 mileage = 6;
  CarStatus status = 7;
}

// Standard operation response
message OpResponse {
  bool ok = 1;
  string message = 2;
}

// Add car
message AddCarRequest {
  Car car = 1;
}
message AddCarResponse {
  bool ok = 1;
  string plate = 2;
  string message = 3;
}

// User info
message User {
  string username = 1;
  Role role = 2;
  string fullname = 3;
  string email = 4;
}

// Update car
message UpdateCarRequest {
  string plate = 1;
  Car updates = 2;
}
message UpdateCarResponse {
  bool ok = 1;
  string message = 2;
  Car car = 3;
}

// Remove car
message RemoveCarRequest {
  string plate = 1;
}
message RemoveCarResponse {
  repeated Car cars = 1;
  string message = 2;
}

// List available cars
message ListAvailableRequest {
  string filter = 1; // optional text filter (make, model, plate, year)
}

// Search car
message SearchCarRequest {
  string plate = 1;
}
message SearchCarResponse {
  bool found = 1;
  Car car = 2;
  string message = 3;
}

// Add to cart
message AddToCartRequest {
  string username = 1;
  string plate = 2;
  string start_date = 3; // yyyy-MM-dd
  string end_date = 4;   // yyyy-MM-dd
}
message AddToCartResponse {
  bool ok = 1;
  string message = 2;
}

// Reservation items
message ReservationItem {
  string plate = 1;
  string start_date = 2;
  string end_date = 3;
  double price = 4;
}

// Place reservation
message PlaceReservationRequest {
  string username = 1;
}
message PlaceReservationResponse {
  bool ok = 1;
  string message = 2;
  repeated ReservationItem reservations = 3;
}

// Reservation record
message Reservation {
  string id = 1;
  string username = 2;
  repeated ReservationItem items = 3;
  string created_at = 4;
}

message ListReservationsRequest {}
message ListReservationsResponse {
  repeated Reservation reservations = 1;
}

service CarRental {
  // Admin APIs
  rpc AddCar(AddCarRequest) returns (AddCarResponse);
  rpc CreateUsers(stream User) returns (OpResponse);
  rpc UpdateCar(UpdateCarRequest) returns (UpdateCarResponse);
  rpc RemoveCar(RemoveCarRequest) returns (RemoveCarResponse);
  rpc ListReservations(ListReservationsRequest) returns (ListReservationsResponse);

  // Customer APIs
  rpc ListAvailableCars(ListAvailableRequest) returns (stream Car);
  rpc SearchCar(SearchCarRequest) returns (SearchCarResponse);
  rpc AddToCart(AddToCartRequest) returns (AddToCartResponse);
  rpc PlaceReservation(PlaceReservationRequest) returns (PlaceReservationResponse);
}